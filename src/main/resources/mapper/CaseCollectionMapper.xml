<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.okay.family.mapper.CaseCollectionMapper">

    <sql id="table">
        qa_case_collection
    </sql>

    <sql id="case_relation">
        qa_collection_case_relation
    </sql>

    <sql id="edit_record">
        qa_collection_edit_record
    </sql>

    <sql id="case_table">
        qa_test_case
    </sql>

    <sql id="run_record">
        qa_collection_run_record
    </sql>

    <sql id="env">
        family_base_env
    </sql>

    <sql id="service">
        family_service
    </sql>

    <sql id="case_status">
        qa_case_run_status
    </sql>

    <sql id="collection_status">
        qa_collection_status
    </sql>

    <sql id="case_run_record">
        qa_case_run_record
    </sql>

    <resultMap type="com.okay.family.common.bean.testcase.request.CaseDataBean" id="CaseDataBean">
        <result property="id" column="id"/>
        <result property="envId" column="envId"/>
        <result property="uid" column="uid"/>
        <result property="apiId" column="apiId"/>
        <result property="httpType" column="method"/>
        <result property="serviceId" column="serviceId"/>
        <result property="readType" column="type"/>
        <result property="url" column="path"/>
        <result property="available" column="available"/>
        <result property="headers" column="headers"
                typeHandler="com.okay.family.common.typehandler.JsonHandler"/>
        <result property="params" column="params"
                typeHandler="com.okay.family.common.typehandler.JsonHandler"/>
        <result property="testWish" column="verify"
                typeHandler="com.okay.family.common.typehandler.ListCaseVerifyBeanHandler"/>
    </resultMap>

    <resultMap type="com.okay.family.common.bean.casecollect.response.CollectionRunResultDetailBean"
               id="CollectionRunResultDetailBean">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="envName" column="envName"/>
        <result property="runId" column="runId"/>
        <result property="caseNum" column="caseNum"/>
        <result property="result" column="result"/>
        <result property="startTime" column="startTime"/>
        <result property="endTime" column="endTime"/>
        <result property="list" column="list"
                typeHandler="com.okay.family.common.typehandler.ResultArrayHandler"/>
    </resultMap>

    <select id="getCollectionInfo" parameterType="com.okay.family.common.bean.casecollect.response.CollectionCaseInfoBean"
            resultType="com.okay.family.common.bean.casecollect.response.CollectionCaseInfoBean">
        select name groupName,envId,CASE uid = #{uid} WHEN 1 THEN 1 ELSE 0 END isMyself from
        <include refid="table"/>
        where id = #{id}
    </select>

    <select id="getCases" resultType="com.okay.family.common.bean.casecollect.response.ListCaseBean">
        select c.id id,c.name name,CASE c.uid = #{arg1} WHEN 1 THEN 1 ELSE 0 END isEdit from
        <include refid="case_relation"/>
        r left join
        <include refid="case_table"/>
        c on r.caseId = c.id
        where r.collectionId = #{arg0}
    </select>

    <select id="getCasesDeatil" parameterType="com.okay.family.common.bean.casecollect.request.RunCollectionBean"
            resultMap="CaseDataBean">
        select c.id,#{uid},#{envId},c.apiId,c.envId
        ,c.method,c.serviceId,c.type,c.path,available,c.headers,c.params,c.verify from
        <include refid="case_relation"/>
        r left join
        <include refid="case_table"/>
        c on r.caseId = c.id
        where r.collectionId = #{groupId}
    </select>

    <select id="findCollecions" parameterType="com.okay.family.common.bean.casecollect.request.SearchCollectionBean"
            resultType="com.okay.family.common.bean.casecollect.response.ListCollectionBean">
        select t.id,c.name result,t.name,t.envId,e.name envName,t.create_time createTime,t.pub isShare,CASE t.uid =
        #{uid} WHEN
        1 THEN 1 ELSE 0 END isMyself from
        <include refid="table"/>
        t left join
        <include refid="env"/>
        e on t.envId = e.id left join
        <include refid="collection_status"/>
        c on t.state = c.id
        <where>
            <if test="result != 0">
                and t.state = #{result}
            </if>
            <if test="envId != 0">
                and t.envId = #{envId}
            </if>
            <choose>
                <when test="type == 2">
                    and t.id = #{groupQuery}
                </when>
                <when test="type == 1">
                    and t.name like concat("%",#{groupQuery},"%")
                </when>
            </choose>
            <if test="1 == 1">
                and (t.uid = #{uid} or t.pub = 1)
            </if>
        </where>
        order by t.create_time desc
    </select>

    <select id="getCaseIds" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select caseId from
        <include refid="case_relation"/>
        where collectionId = #{0}
    </select>

    <select id="searchCollectionNoPage"
            parameterType="com.okay.family.common.bean.casecollect.request.SearchCollectionNoPageBean"
            resultType="com.okay.family.common.bean.common.SimpleBean">
        select id,name from
        <include refid="table"/>
        where
        envId = #{envId} and ( uid = #{uid} or pub = 1 )
        <if test="query != ''">
            and name like concat("%",#{query},"%")
        </if>
    </select>

    <select id="getRecords" parameterType="com.okay.family.common.bean.common.DelBean"
            resultType="com.okay.family.common.bean.common.SimpleBean">
        select runId id,CASE name = '' WHEN 1 THEN create_time ELSE name END name from
        <include refid="run_record"/>
        where collectionId = #{id}
        order by create_time desc limit 20
    </select>

    <select id="getCaseRunRecord" parameterType="java.lang.Integer"
            resultType="com.okay.family.common.bean.testcase.response.ListCaseRunResultBean">
        select c.id id,ca.name name,cs.name result,s.name serviceName,ca.path url from
        <include refid="run_record"/>
        t left join
        <include refid="case_run_record"/>
        c on t.runId = c.runId left join
        <include refid="case_table"/>
        ca on ca.id = c.caseId left join
        <include refid="service"/>
        s on ca.serviceId = s.id left join
        <include refid="case_status"/>
        cs on c.result = cs.id
        where t.runId = #{0}
        order by t.create_time desc
    </select>

    <select id="getCollectionRunDetail" parameterType="java.lang.Integer"
            resultMap="CollectionRunResultDetailBean">
        select r.collectionId id,t.name,s.name envName,r.runId,r.caseNum,c.name
        result,startTime,endTime,concat("成功=",r.success,";失败=",r.fail,";无法运行=",r.unrun,";用户错误=",r.userError) list from
        <include refid="run_record"/>
        r left join
        <include refid="collection_status"/>
        c on r.result = c.id left join
        <include refid="table"/>
        t on r.collectionId = t.id left join
        <include refid="env"/>
        s on r.envId = s.id
        where runId = #{0} limit 1
    </select>

    <update id="editCollection" parameterType="com.okay.family.common.bean.casecollect.request.CollectionEditBean">
        update
        <include refid="table"/>
        SET
        name = #{name},editor=#{uid}
        where id = #{groupId}
    </update>

    <update id="shareCollection" parameterType="com.okay.family.common.bean.casecollect.request.DelCollectionBean">
        update
        <include refid="table"/>
        set
        pub = 1,editor=#{uid}
        where id = #{groupId} and uid = #{uid}
    </update>

    <update id="updateCollectionStatus">
        update
        <include refid="table"/>
        set
        state = #{arg1}
        where id = #{arg0}
    </update>

    <insert id="addCollection" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.okay.family.common.bean.casecollect.request.AddCollectionBean">
        INSERT INTO
        <include refid="table"/>
        (uid,envId,name,editor,pub,state)
        values
        (#{uid},#{envId},#{groupName},#{uid},2,1)
    </insert>

    <insert id="addCollectionCaseRelation"
            parameterType="com.okay.family.common.bean.casecollect.request.AddCollectionBean">
        insert into
        <include refid="case_relation"/>
        (collectionId,caseId)
        values
        <foreach collection="apiList" item="apiList" index="index" separator=",">
            (
            #{id},#{apiList}
            )
        </foreach>
    </insert>

    <insert id="addEditRcord" parameterType="com.okay.family.common.bean.casecollect.request.CaseCollectionEditRecord">
        insert into
        <include refid="edit_record"/>
        (collectionId,editor,type)
        values
        (#{collectionId},#{editor},#{type})
    </insert>

    <insert id="addCollectionRunRecord"
            parameterType="com.okay.family.common.bean.casecollect.request.CollectionRunResultRecord">
        INSERT INTO
        <include refid="run_record"/>
        (runId,collectionId,name,envId,caseNum,result,success,fail,unrun,userError,startTime,endTime)
        VALUES
        (#{runId},#{collectionId},#{name},#{envId},#{caseNum},#{result},#{success},#{fail},#{unrun},#{userError},#{start},#{end})
    </insert>

    <delete id="delCaseFromCollection"
            parameterType="com.okay.family.common.bean.casecollect.request.DelCaseCollectionRelationBean">
        delete from
        <include refid="case_relation"/>
        where collectionId = #{groupId} and caseId = #{apiId}
    </delete>

    <delete id="delCollection" parameterType="com.okay.family.common.bean.casecollect.request.DelCollectionBean">
        delete from
        <include refid="table"/>
        where id = #{groupId} and uid =#{uid}
    </delete>

    <delete id="delCollectionCaseRelation"
            parameterType="com.okay.family.common.bean.casecollect.request.DelCollectionBean">
        delete from
        <include refid="case_relation"/>
        where collectionId = #{groupId}
    </delete>

    <delete id="delAllCaseCollectionRelation">
        delete from
        <include refid="case_relation"/>
        where caseId = #{arg0}
    </delete>
</mapper>