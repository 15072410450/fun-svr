<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.okay.family.mapper.TestCaseMapper">

    <sql id="table">
        qa_test_case
    </sql>

    <sql id="record_table">
        qa_case_edit_record
    </sql>

    <sql id="case_project_relation">
        qa_case_project_relation
    </sql>

    <sql id="server_env">
        family_service_env
    </sql>

    <sql id="api_info">
        family_server_api_info
    </sql>

    <sql id="case_available">
        qa_case_available_status
    </sql>
    <sql id="user_table">
        family_user
    </sql>

    <sql id="env">
        family_base_env
    </sql>

    <resultMap id="entityMap" type="com.okay.family.common.bean.testcase.CaseVerifyBean">
        <result column="verify" property="verify"
                typeHandler="com.okay.family.common.typehandler.ListCaseVerifyBeanHandler"/>
    </resultMap>

    <resultMap type="com.okay.family.common.bean.testcase.response.TestCaseAttributeBean" id="TestCaseDetailBean">
        <result property="id" column="id"/>
        <result property="owner" column="owner"/>
        <result property="environment" column="environment"/>
        <result property="project" column="project"/>
        <result property="serverid" column="serverid"/>
        <result property="servername" column="servername"/>
        <result property="moduleid" column="moduleid"/>
        <result property="modulename" column="modulename"/>
        <result property="apiid" column="apiid"/>
        <result property="apipath" column="apipath"/>
        <result property="host" column="host"/>
        <result property="name" column="name"/>
        <result property="apitype" column="apitype"/>
        <result property="lastresult" column="lastresult"/>
        <result property="method" column="method"/>
        <result property="headers" column="headers" typeHandler="com.okay.family.common.typehandler.JsonHandler"/>
        <result property="params" column="params" typeHandler="com.okay.family.common.typehandler.JsonHandler"/>
        <result property="level" column="level"/>
        <result property="verify" column="verify"
                typeHandler="com.okay.family.common.typehandler.ListCaseVerifyBeanHandler"/>
    </resultMap>

    <select id="findCasesByApi" resultMap="TestCaseDetailBean">
        select * from
        <include refid="table"/>
        WHERE environment=#{arg0} and apiid = #{arg1}
    </select>

    <select id="searchCases" parameterType="com.okay.family.common.bean.testcase.request.CaseSearchBean"
            resultType="com.okay.family.common.bean.testcase.response.TestCaseListBean">
        select t.id id,CASE ISNULL(u.nick_name) WHEN 1 THEN "匿名用户" ELSE u.nick_name END user,t.name name,e.name envName,api.name apiName, t.uid = #{uid} isMyself,CASE
        t.available
        WHEN 1 THEN 1 ELSE 0 END isUsed from
        <include refid="table"/>
        t LEFT JOIN
        <include refid="case_available"/>
        a ON t.available = a.id
        LEFT JOIN
        <include refid="user_table"/>
        u on t.uid = u.id
        LEFT JOIN
        <include refid="api_info"/>
        api on t.apiId = api.id
        LEFT JOIN
        <include refid="env"/>
        e on t.envId = e.id
        <where>
            <if test="envId != 0">
                and envId = #{envId}
            </if>
            <if test="serviceId != 0">
                and serviceId = #{serviceId}
            </if>
            <if test="apiId != 0">
                and apiId = #{apiId}
            </if>
            <if test="isUsed != 0">
                and available = #{isUsed}
            </if>
            <if test="moduleId != 0">
                and moduleId = #{moduleId}
            </if>
            <if test="projectId != 0">
                AND FIND_IN_SET(#{projectId},projectList)
            </if>
            <choose>
                <when test="type == 1">
                    and t.name like concat("%",#{testQuery},"%")
                </when>
                <when test="type == 2">
                    t.id = #{testQuery}
                </when>
            </choose>
            <choose>
                <when test="isUsed == 1">
                    and uid = #{uid}
                </when>
                <when test="isUsed == 2">
                    and uid != #{uid}
                </when>
            </choose>
        </where>
        order by t.create_time

    </select>

    <update id="updateCaseData" parameterType="com.okay.family.common.bean.testcase.request.CaseDataBean">
        UPDATE
        <include refid="table"/>
        SET
        headermoco=#{header,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.JsonArrayHandler},params=#{upData,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.JsonArrayHandler},headers=#{headers,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.JsonHandler},params=#{params,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.JsonHandler},verify=#{testWish,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.ListCaseVerifyBeanHandler},editor=#{uid},available=#{available}
        WHERE
        id = #{id} and uid = #{uid}
    </update>

    <update id="updateCase" parameterType="com.okay.family.common.bean.testcase.request.EditCaseAttributeBean">
        UPDATE
        <include refid="table"/>
        c
        INNER JOIN
        <include refid="api_info"/>
        a ON a.id = #{apiId}
        SET
        editor=#{uid},c.name=#{name},c.envId=#{envId},c.serviceId=#{serviceId},c.moduleId=#{moduleId},c.projectList=#{projectList,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.ListIntegerHandler},c.apiId=#{apiId},c.headermoco=a.header_para,c.paramsmoco=a.request_par
        WHERE
        c.id = #{id}
    </update>

    <insert id="copyCase" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.okay.family.common.bean.testcase.request.EditCaseAttributeBean">
        INSERT INTO
        <include refid="table"/>
        (uid,editor,projectList,envId,serviceId,moduleId,apiId,name,level,path,type,method,headermoco,paramsmoco,headers,params,verify,available)
        select * from (select
        #{uid} aa,#{uid}
        bb,projectList,envId,serviceId,moduleId,apiId,#{name}
        n,level,path,type,method,headermoco,paramsmoco,headers,params,verify,available
        FROM
        <include refid="table"/>
        WHERE id = #{id}) t
    </insert>

    <insert id="addCaseProjectRelation" parameterType="com.okay.family.common.bean.testcase.request.EditCaseAttributeBean">
        insert into
        <include refid="case_project_relation"/>
        (caseId,projectId)
        values
        <foreach collection="projectList" item="projectId" index="index" separator=",">
            (
            #{id}, #{projectId}
            )
        </foreach>
    </insert>

    <insert id="addEditRecord" parameterType="com.okay.family.common.bean.testcase.response.CaseEditRecord">
        INSERT INTO
        <include refid="record_table"/>
        (caseId,editor,type)
        VALUES
        (#{caseId},#{editor},#{type})
    </insert>

    <insert id="copyCaseProjectRelation">
        INSERT INTO
        <include refid="case_project_relation"/>

        (caseId,projectId)

        select * from (select
        #{arg1} aa,projectId
        FROM
        <include refid="case_project_relation"/>
        WHERE caseId = #{arg0}) t
    </insert>

    <insert id="addCase" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.okay.family.common.bean.testcase.request.EditCaseAttributeBean">
        INSERT INTO
        <include refid="table"/>

        (uid,editor,projectList,envId,serviceId,moduleId,apiId,name,level,available,path,type,method,headermoco,paramsmoco)

        select * from (select
        #{uid} aa,#{uid}
        bb,#{projectList,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.ListIntegerHandler} ab,#{envId}
        cc,#{serviceId} dd ,#{moduleId} ee ,#{apiId} ff,#{name}
        gg,1,2,api_url,api_action,api_method,header_para,request_par
        FROM
        <include refid="api_info"/>
        WHERE id = #{apiId}) t
    </insert>

    <delete id="delCaseProjectRelation" parameterType="com.okay.family.common.bean.common.DelBean">
        delete from
        <include refid="case_project_relation"/>
        where caseId = #{id}
    </delete>

    <delete id="delCase" parameterType="com.okay.family.common.bean.common.DelBean">
        delete from
        <include refid="table"/>
        where id = #{id} and uid = #{uid}
    </delete>

</mapper>