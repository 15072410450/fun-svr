<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.okay.family.mapper.TestCaseMapper">

    <sql id="table">
        qa_test_case
    </sql>

    <sql id="record_table">
        qa_case_edit_record
    </sql>

    <sql id="case_project_relation">
        qa_case_project_relation
    </sql>

    <sql id="api_info">
        family_server_api_info
    </sql>

    <sql id="case_available">
        qa_case_available_status
    </sql>
    <sql id="user_table">
        family_user
    </sql>

    <sql id="env">
        family_base_env
    </sql>

    <sql id="edit_record">
        qa_case_edit_record
    </sql>

    <sql id="edit_type">
        qa_case_edit_type
    </sql>

    <sql id="module_table">
        family_server_api_module
    </sql>

    <sql id="service_table">
        family_service
    </sql>

    <sql id="project">
        family_project
    </sql>

    <sql id="run_record">
        qa_case_run_record
    </sql>

    <resultMap id="entityMap" type="com.okay.family.common.bean.testcase.CaseVerifyBean">
        <result column="verify" property="verify"
                typeHandler="com.okay.family.common.typehandler.ListCaseVerifyBeanHandler"/>
    </resultMap>

    <resultMap type="com.okay.family.common.bean.testcase.response.CaseDetailBean" id="CaseDetailBean">
        <result property="id" column="id"/>
        <result property="envId" column="envId"/>
        <result property="envName" column="envName"/>
        <result property="apiId" column="apiId"/>
        <result property="apiName" column="apiName"/>
        <result property="httpType" column="method"/>
        <result property="serviceId" column="serviceId"/>
        <result property="serviceName" column="serviceName"/>
        <result property="moduleId" column="moduleId"/>
        <result property="moduleName" column="moduleName"/>
        <result property="readType" column="type"/>
        <result property="url" column="path"/>
        <result property="name" column="name"/>
        <result property="header_paras" column="headersmoco"
                typeHandler="com.okay.family.common.typehandler.JsonArrayHandler"/>
        <result property="request_paras" column="paramsmoco"
                typeHandler="com.okay.family.common.typehandler.JsonArrayHandler"/>
        <result property="testWish" column="verify"
                typeHandler="com.okay.family.common.typehandler.ListCaseVerifyBeanHandler"/>
    </resultMap>

    <select id="getCaseDetail" parameterType="java.lang.Integer" resultMap="CaseDetailBean">
        select c.id,c.name,c.apiId,a.name apiName,c.envId,e.name envName,c.serviceId,s.name
        serviceName,c.moduleId,m.name moduleName,c.type,c.method,c.headersmoco,c.paramsmoco,c.verify,c.path from
        <include refid="table"/>
        c left join
        <include refid="env"/>
        e on c.envId = e.id left join
        <include refid="service_table"/>
        s on c.serviceId = s.id left join
        <include refid="module_table"/>
        m on c.moduleId = m.id left join
        <include refid="api_info"/>
        a on c.apiId = a.id
        WHERE c.id = #{0}
    </select>

    <select id="getAttributeById" parameterType="java.lang.Integer"
            resultType="com.okay.family.common.bean.testcase.response.TestCaseAttributeBean">
        select c.id,c.apiId,a.name apiName,c.serviceId,s.name serviceName,c.moduleId,m.name
        moduleName,c.name,c.envId,e.name envName from
        <include refid="table"/>
        c left join
        <include refid="api_info"/>
        a on c.apiId = a.id left join
        <include refid="service_table"/>
        s on c.serviceId = s.id left join
        <include refid="module_table"/>
        m on c.moduleId = m.id left join
        <include refid="env"/>
        e on c.envId = e.id
        where c.id = #{0}
    </select>

    <select id="getCaseProjectRelation" parameterType="java.lang.Integer"
            resultType="com.okay.family.common.bean.common.ProjectBean">
        select p.id,p.name,p.version from
        <include refid="case_project_relation"/>
        r left join
        <include refid="project"/>
        p on r.projectId = p.id
        where r.caseId = #{0}
    </select>

    <select id="getCaseEditRecords" parameterType="com.okay.family.common.bean.testcase.request.CaseEditRecordQueryBean"
            resultType="com.okay.family.common.bean.testcase.response.CaseEditRetrunRecord">
        SELECT r.id id,r.caseId caseId,r.create_time time,u.nick_name people,t.name handleType from
        <include refid="edit_record"/>
        r left join
        <include refid="edit_type"/>
        t on r.type = t.id left join
        <include refid="user_table"/>
        u
        on r.editor = u.id
        where r.caseId = #{id}
        order by r.create_time desc
    </select>

    <select id="searchCases" parameterType="com.okay.family.common.bean.testcase.request.CaseSearchBean"
            resultType="com.okay.family.common.bean.testcase.response.TestCaseListBean">
        select t.id id,CASE ISNULL(u.nick_name) WHEN 1 THEN "匿名用户" ELSE u.nick_name END user,t.name name,e.name
        envName,api.name apiName, t.uid = #{uid} isMyself,CASE
        t.available
        WHEN 1 THEN 1 ELSE 0 END isUsed from
        <include refid="table"/>
        t LEFT JOIN
        <include refid="case_available"/>
        a ON t.available = a.id
        LEFT JOIN
        <include refid="user_table"/>
        u on t.uid = u.id
        LEFT JOIN
        <include refid="api_info"/>
        api on t.apiId = api.id
        LEFT JOIN
        <include refid="env"/>
        e on t.envId = e.id
        <where>
            <if test="envId != null">
                and t.envId = #{envId}
            </if>
            <if test="serviceId != null">
                and t.serviceId = #{serviceId}
            </if>
            <if test="apiId != null">
                and t.apiId = #{apiId}
            </if>
            <if test="isUsed != 0">
                and t.available = #{isUsed}
            </if>
            <if test="moduleId != null">
                and t.moduleId = #{moduleId}
            </if>
            <if test="projectId != null">
                AND FIND_IN_SET(#{projectId},t.projectList)
            </if>
            <choose>
                <when test="isMyself == 1">
                    and t.uid = #{uid}
                </when>
                <when test="isMyself == 2">
                    and t.uid != #{uid}
                </when>
            </choose>
            <choose>
                <when test="type == 1">
                    and t.name like concat("%",#{testQuery},"%")
                </when>
                <when test="type == 2">
                    and t.id = #{testQuery}
                </when>
            </choose>
        </where>
        order by t.create_time desc
    </select>

    <select id="searchCaseNoPage" parameterType="com.okay.family.common.bean.testcase.request.CaseSearchNoPageBean"
            resultType="com.okay.family.common.bean.common.SimpleBean">
        select id,name from
        <include refid="table"/>
        where envId = #{envId} and apiId = #{apiId} and available = 1
    </select>

    <update id="updateCaseData" parameterType="com.okay.family.common.bean.testcase.request.CaseDataBean">
        UPDATE
        <include refid="table"/>
        SET
        headersmoco=#{header_paras,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.JsonArrayHandler},paramsmoco=#{request_paras,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.JsonArrayHandler},headers=#{headers,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.JsonHandler},params=#{params,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.JsonHandler},verify=#{testWish,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.ListCaseVerifyBeanHandler},editor=#{uid},available=#{available},create_time=now()
        WHERE
        id = #{id} and uid = #{uid}
    </update>

    <update id="updateCase" parameterType="com.okay.family.common.bean.testcase.request.EditCaseAttributeBean">
        UPDATE
        <include refid="table"/>
        c
        INNER JOIN
        <include refid="api_info"/>
        a ON a.id = #{apiId}
        SET
        editor=#{uid},c.name=#{name},c.envId=#{envId},c.serviceId=#{serviceId},c.moduleId=#{moduleId},c.projectList=#{projectList,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.ListIntegerHandler},c.apiId=#{apiId},c.headersmoco=a.header_paras,c.paramsmoco=a.request_paras
        WHERE
        c.id = #{id}
    </update>

    <insert id="copyCase" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.okay.family.common.bean.testcase.request.EditCaseAttributeBean">
        INSERT INTO
        <include refid="table"/>
        (uid,editor,projectList,envId,serviceId,moduleId,apiId,name,level,path,type,method,headersmoco,paramsmoco,headers,params,verify,available)
        select * from (select
        #{uid} aa,#{uid}
        bb,projectList,envId,serviceId,moduleId,apiId,#{name}
        n,level,path,type,method,headersmoco,paramsmoco,headers,params,verify,available
        FROM
        <include refid="table"/>
        WHERE id = #{id}) t
    </insert>

    <insert id="addRunRecord" parameterType="com.okay.family.common.bean.testcase.CaseRunRecord">
        insert into
        <include refid="run_record"/>
        (runId,mark,uid,caseId,code,result,verify,params,headers,response)
        values
        (#{runId},#{mark},#{uid},#{caseId},#{code},#{result},#{checkResult,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.ListCaseVerifyBeanHandler},#{params,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.JsonHandler},#{headers,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.JsonHandler},#{responseResult,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.JsonHandler})
    </insert>

    <insert id="addCaseProjectRelation"
            parameterType="com.okay.family.common.bean.testcase.request.EditCaseAttributeBean">
        insert into
        <include refid="case_project_relation"/>
        (caseId,projectId)
        values
        <foreach collection="projectList" item="projectId" index="index" separator=",">
            (
            #{id}, #{projectId}
            )
        </foreach>
    </insert>

    <insert id="addEditRecord" parameterType="com.okay.family.common.bean.testcase.request.CaseEditRecord">
        INSERT INTO
        <include refid="record_table"/>
        (caseId,editor,type)
        VALUES
        (#{caseId},#{editor},#{type})
    </insert>

    <insert id="copyCaseProjectRelation">
        INSERT INTO
        <include refid="case_project_relation"/>

        (caseId,projectId)

        select * from (select
        #{arg1} aa,projectId
        FROM
        <include refid="case_project_relation"/>
        WHERE caseId = #{arg0}) t
    </insert>

    <insert id="addCase" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.okay.family.common.bean.testcase.request.EditCaseAttributeBean">
        INSERT INTO
        <include refid="table"/>

        (uid,editor,projectList,envId,serviceId,moduleId,apiId,name,level,available,path,type,method,headersmoco,paramsmoco)

        select * from (select
        #{uid} aa,#{uid}
        bb,#{projectList,jdbcType=OTHER,typeHandler=com.okay.family.common.typehandler.ListIntegerHandler} ab,#{envId}
        cc,#{serviceId} dd ,#{moduleId} ee ,#{apiId} ff,#{name}
        gg,1,2,api_url,api_action,api_method,header_paras,request_paras
        FROM
        <include refid="api_info"/>
        WHERE id = #{apiId}) t
    </insert>

    <delete id="delCaseProjectRelation" parameterType="com.okay.family.common.bean.common.DelBean">
        delete from
        <include refid="case_project_relation"/>
        where caseId = #{id}
    </delete>

    <delete id="delCase" parameterType="com.okay.family.common.bean.common.DelBean">
        delete from
        <include refid="table"/>
        where id = #{id} and uid = #{uid}
    </delete>

</mapper>